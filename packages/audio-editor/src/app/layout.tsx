import type { Metadata } from 'next';
import { Inter as FontSans } from 'next/font/google';
import './globals.css';
import { cn } from '@audio-editor/lib/utils';
import { AudioProvider } from './test-2/audio-provider';
import { promises as fs } from 'fs';
import path from 'path';

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

const fontSans = FontSans({
  subsets: ['latin'],
  variable: '--font-sans',
});

const readAudioFile = async (filename: string) => {
  const filePath = path.join(process.cwd(), 'public', filename);
  const fileBuffer = await fs.readFile(filePath);
  return fileBuffer.toString('base64'); // Convert to base64 string
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const audioFileBuffer = await readAudioFile('wels.mp3');

  return (
    <html lang='en' className='h-full' suppressHydrationWarning>
      <head />
      <body
        className={cn(
          'h-full font-sans antialiased bg-black text-white',
          fontSans.variable
        )}
      >
        <AudioProvider initialFileBuffer={audioFileBuffer}>
          {children}
        </AudioProvider>
      </body>
    </html>
  );
}
